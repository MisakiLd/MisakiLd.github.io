<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C#基础记录(7)</title>
      <link href="/2020/02/23/c%E6%B2%99%E5%9D%A17/"/>
      <url>/2020/02/23/c%E6%B2%99%E5%9D%A17/</url>
      
        <content type="html"><![CDATA[<h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>类的语法<br>[访问修饰符] class 类名<br>{<br>类的描述信息;<br>}  </p><p>访问修饰符：用于描述此类的访问权限，有默认值；<br>class：关键字，用于声明一个类，和enum，struct作用一样。<br>类的描述信息：描述这类事物的特征（字段，属性，方法）；  </p><p>对象<br>语法： 类名 对象名 = new 类名();<br>使用<br>实例化对象<br>类名 对象名 = new 类名();  </p><p>赋值：对象名.字段名 = 值<br>取值：对象名.字段名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">public class Man</span><br><span class="line">&#123;</span><br><span class="line">    public string _name;</span><br><span class="line">    public int _age;</span><br><span class="line">    public char _gender;</span><br><span class="line"></span><br><span class="line">    public void Hobby()</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(&quot;&#123;0&#125;&#123;1&#125;&#123;2&#125;,XXXX&quot;,_name,_age,_gender);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           Man xiaom = new Man();</span><br><span class="line">        xiaom._age = 18;</span><br><span class="line">        xiaom._gender = &apos;男&apos;;</span><br><span class="line">        xiaom._name = &quot;小明&quot;;</span><br><span class="line">        xiaom.Hobby();</span><br><span class="line">        Console.ReadKey();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C#基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向对象 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python基础记录(1)</title>
      <link href="/2020/02/23/python1/"/>
      <url>/2020/02/23/python1/</url>
      
        <content type="html"><![CDATA[<h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>类的语法<br>[访问修饰符] class 类名<br>{<br>类的描述信息;<br>}  </p><p>访问修饰符：用于描述此类的访问权限，有默认值；<br>class：关键字，用于声明一个类，和enum，struct作用一样。<br>类的描述信息：描述这类事物的特征（字段，属性，方法）；  </p><p>对象<br>语法： 类名 对象名 = new 类名();<br>使用<br>实例化对象<br>类名 对象名 = new 类名();  </p><p>赋值：对象名.字段名 = 值<br>取值：对象名.字段名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">public class Man</span><br><span class="line">&#123;</span><br><span class="line">    public string _name;</span><br><span class="line">    public int _age;</span><br><span class="line">    public char _gender;</span><br><span class="line"></span><br><span class="line">    public void Hobby()</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(&quot;&#123;0&#125;&#123;1&#125;&#123;2&#125;,XXXX&quot;,_name,_age,_gender);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           Man xiaom = new Man();</span><br><span class="line">        xiaom._age = 18;</span><br><span class="line">        xiaom._gender = &apos;男&apos;;</span><br><span class="line">        xiaom._name = &quot;小明&quot;;</span><br><span class="line">        xiaom.Hobby();</span><br><span class="line">        Console.ReadKey();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿巴阿巴 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#基础记录(6)</title>
      <link href="/2020/02/21/c%E6%B2%99%E5%9D%A16/"/>
      <url>/2020/02/21/c%E6%B2%99%E5%9D%A16/</url>
      
        <content type="html"><![CDATA[<h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><p>代码复用机制  </p><ol><li>语法<br>public static 返回值类型 函数名 ([参数列表])<br>{<br>函数代码体;<br>}<br>static:静态标识符：<br>返回值类型：如不需要返回值写voud<br>方法名：覆核帕斯卡命名<br>参数列表：如不需要参数小括号中可以为空，如果需要参数以 参数类型 参数名 的形式写  </li><li>调用<br>类名.方法名（【参数】）;</li><li>方法的参数和返回值<br>形参：形式参数，定义函数时，在参数列表中定义的函数。<br>实参：实际参数，调用函数是，传递给函数的具体参数。<br>实参的类型和数量必须与形参一致。  </li><li>返回值<br>关键字return<br>作用：①在函数中返回要返回的值；<br>②立即结束函数  </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">            int d = Program.Sum(7, 6);</span><br><span class="line">            Console.WriteLine(d);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        public static int Sum(int a,int b)</span><br><span class="line">        &#123;</span><br><span class="line">            int c = a + b;</span><br><span class="line">            return c;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    int a = 10;</span><br><span class="line">    int b = Number(a);</span><br><span class="line">    Console.WriteLine(b);</span><br><span class="line">    Console.ReadKey();</span><br><span class="line">   </span><br><span class="line">   public static int Number(int a)</span><br><span class="line">&#123;</span><br><span class="line">    a = a + 10;</span><br><span class="line">    return a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    int a = Compare(10, 20);</span><br><span class="line">    Console.WriteLine(a);</span><br><span class="line">    Console.ReadKey();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   public static int Compare(int a,int b)//形参int a,int b</span><br><span class="line">&#123;</span><br><span class="line">    if (a &gt; b)</span><br><span class="line">    &#123;</span><br><span class="line">        return a;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        return b;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">            int a = Convert.ToInt32(Console.ReadLine());</span><br><span class="line">            bool c = run(a);</span><br><span class="line">            Console.WriteLine(c);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           public static bool run(int a)</span><br><span class="line">        &#123;</span><br><span class="line">            bool b =(a % 400 == 0)||(a % 4 == 0 &amp;&amp; a % 100 !=0);</span><br><span class="line">            return b;</span><br><span class="line">        &#125;</span><br><span class="line">```  </span><br><span class="line"># out参数 #</span><br><span class="line">用于返回多个不同类型的值。  </span><br><span class="line">函数外可以不为变量赋值，而函数内必须为其赋值。</span><br></pre></td></tr></table></figure><pre><code>    int q;    int w;    int e;    string r;    Sum(out q, out w, out e, out r);    Console.WriteLine(r);    Console.ReadKey();   public static void Sum(out int a,out int b,out int c,out string d){    a = 5;    b = a + 1;    c = a + b;    d = &quot;XX&quot;;}</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># ref函数 #</span><br><span class="line">将一个变量传入一个函数中处理，再将处理后的值带出函数。</span><br></pre></td></tr></table></figure><pre><code>    int a = 10;    zz(ref a);    Console.WriteLine(a);    Console.ReadKey();   public static void zz(ref int s){    s += 1; //ref传的是参数，参数是参数，返回值是返回值}</code></pre><pre><code># 函数重载 #1. 重载：函数名称相同，但参数列表不同。  调用该函数时会根据不同参数自动选择合适的函数重载形式。  2. 参数不同的情况  ①如参数个数相同，则参数类型不能相同；  ②如参数类型相同，则参数个数不能相同。  注：函数的返回值和重载没有关系。  </code></pre>]]></content>
      
      
      <categories>
          
          <category> C#基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 方法语法 </tag>
            
            <tag> out.ref参数 </tag>
            
            <tag> 函数重载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#基础记录(5)</title>
      <link href="/2020/02/19/c%E6%B2%99%E5%9D%A15/"/>
      <url>/2020/02/19/c%E6%B2%99%E5%9D%A15/</url>
      
        <content type="html"><![CDATA[<h1 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h1><p>const,全大写<br>const int A = 10  </p><h1 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h1><p>语法<br>定义在namespace下<br>（帕斯卡命名法）<br>public enum 枚举名<br>{<br>X，<br>X，<br>X<br>}<br>使用<br>枚举类型 变量名 = 枚举类型.值  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">namespace下  </span><br><span class="line">&#123;public enum Gender</span><br><span class="line">    &#123;</span><br><span class="line">        男,</span><br><span class="line">        女          </span><br><span class="line">    &#125;</span><br><span class="line">            Gender gender = Gender.男;</span><br></pre></td></tr></table></figure><h1 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h1><p>语法<br>定义在namespace下<br>(帕斯卡命名法)<br>声明结构体<br>public struct 结构体名称<br>{<br> public 数据类型 字段名；<br> public 数据类型 字段名；<br> public 数据类型 字段名；  </p><p>}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">//(namespace下)</span><br><span class="line">public struct Person</span><br><span class="line">&#123;</span><br><span class="line">    public string _name;</span><br><span class="line">    public char _gender;</span><br><span class="line">    public int _age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">            Person xl;</span><br><span class="line">        xl._name = &quot;小李&quot;;</span><br><span class="line">        xl._gender = &apos;男&apos;;</span><br><span class="line">        xl._age = 18;</span><br><span class="line"></span><br><span class="line">        Person xz;</span><br><span class="line">        xz._name = &quot;小赵&quot;;</span><br><span class="line">        xz._gender = &apos;男&apos;;</span><br><span class="line">        xz._age = 18;</span><br></pre></td></tr></table></figure><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><ol start="2"><li>初始化<br>数据类型[] 数组名 = new 数据类型[数组长度];<br>new : 创建数组实例。<br>注：左右两端的数据类型一致<br>两种方式：<br>int [] age = new int [10];<br>int [] number = {0,1,2,3,4,5};  </li><li>赋值<br>数组名[下标] = 值；  </li><li>取值<br>数组名[下标]<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">int[] number = new int[5];</span><br><span class="line">for (int i = 0; i &lt; number.Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">    number[i] = i;</span><br><span class="line">&#125;</span><br><span class="line">for (int i = 0; i &lt; number.Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(number[i]);</span><br><span class="line">&#125;</span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure></li></ol><p>其他写法<br>int[] b ={1,2,3,4,5}; //减少了一步赋值同时省略了声明数组长度<br>int[] c = new int[3] {1,2,3};声明同时赋值  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">int[] number = &#123; 1, 2, 3, 4, 5, 6, 7, 8, 9 &#125;;</span><br><span class="line">int max = number[0];</span><br><span class="line">int min = number[0];</span><br><span class="line">int sum = 0;</span><br><span class="line"></span><br><span class="line">for (int i = 0; i &lt; number.Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">    if(max &lt; number[i])</span><br><span class="line">    &#123;</span><br><span class="line">        max = number[i];</span><br><span class="line">    &#125;</span><br><span class="line">    if (number[i] &lt; min)</span><br><span class="line">    &#123;</span><br><span class="line">        min = number[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sum += number[i];</span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine(&quot;最大值&#123;0&#125;,最小值&#123;1&#125;,总和&#123;2&#125;,平均值&#123;3&#125;&quot;, max, min, sum, sum / number.Length);</span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">string[] name = &#123; &quot;小明&quot;, &quot;小李&quot;, &quot;小红&quot;, &quot;小王&quot; &#125;;</span><br><span class="line">string str = null;</span><br><span class="line">for (int i = 0; i &lt; name.Length-1; i++)</span><br><span class="line">&#123;</span><br><span class="line">    str += name[i] + &quot;|&quot;;</span><br><span class="line">                              </span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine(str+name[name.Length-1]);</span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure><pre><code>//正数+1，负数-1,0不变int[] number = { 0, 1, -2, 3, -4 };for (int i = 0; i &lt; number.Length; i++){    if (number[i] &gt; 0)    {        number[i] += 1;    }    else if (number[i] &lt; 0)    {        number[i] -= 1;    }    Console.WriteLine(number[i]);}Console.ReadKey();</code></pre><pre><code></code></pre>]]></content>
      
      
      <categories>
          
          <category> C#基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常量 </tag>
            
            <tag> 枚举 </tag>
            
            <tag> 结构体 </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#基础记录(4)</title>
      <link href="/2020/02/18/c%E6%B2%99%E5%9D%A14/"/>
      <url>/2020/02/18/c%E6%B2%99%E5%9D%A14/</url>
      
        <content type="html"><![CDATA[<h1 id="while语句"><a href="#while语句" class="headerlink" title="while语句"></a>while语句</h1><p>语法<br>while(循环条件)<br>{<br>循环体;<br>}<br>循环条件：一般为关系表达式或一个bool类型值。<br>循环体：要重复执行的代码。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">int a = 0;</span><br><span class="line">while (a &lt; 10)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(&quot;XXX&quot;);</span><br><span class="line">    a++;</span><br><span class="line">&#125;</span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine(&quot;AorB&quot;);</span><br><span class="line">string answer = Console.ReadLine();</span><br><span class="line">while (answer == &quot;A&quot;)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(&quot;XXX&quot;);</span><br><span class="line">    answer = Console.ReadLine();</span><br><span class="line">&#125;</span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine(&quot;输入数量&quot;);</span><br><span class="line">string number = Console.ReadLine();</span><br><span class="line">int shuliang = Convert.ToInt32(number);</span><br><span class="line">int a = 1;</span><br><span class="line">int b = 0;</span><br><span class="line">while (a &lt;= shuliang)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(&quot;输入第&#123;0&#125;个分数&quot;,a);</span><br><span class="line">    int fenshu = Convert.ToInt32(Console.ReadLine());</span><br><span class="line">    b = b + fenshu;   //b += fenshu</span><br><span class="line">    a++;</span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine(&quot;总分为&#123;0&#125;,平均分为&#123;1&#125;&quot;, b, b / shuliang);</span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure><h1 id="do-while"><a href="#do-while" class="headerlink" title="do-while"></a>do-while</h1><p>语法<br>do<br>{<br>循环体；<br>}while（循环条件）;  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">string answer = &quot;&quot;;</span><br><span class="line">do</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(&quot;XXX&quot;);</span><br><span class="line">    answer = Console.ReadLine();</span><br><span class="line">&#125; while (answer == &quot;A&quot;);</span><br><span class="line">Console.WriteLine(&quot;XXXXX&quot;);</span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure><h1 id="for语句"><a href="#for语句" class="headerlink" title="for语句"></a>for语句</h1><p>语法<br>for(初始表达式;条件表达式;增量表达式)<br>{<br>循环体代码<br>}  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">int sum = 0;</span><br><span class="line">for (int i = 1; i &lt;= 100; i++)</span><br><span class="line">&#123;</span><br><span class="line">    sum += i;</span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine(sum);</span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">int sumji = 0;</span><br><span class="line">int sumou = 0;</span><br><span class="line">for (int i = 1; i &lt;= 100; i++) //或者i += 2，</span><br><span class="line">&#123;</span><br><span class="line">    sumji += i++;</span><br><span class="line">&#125;</span><br><span class="line">for (int i = 1; i &lt;= 100; i++) //或者i=2,i+=2</span><br><span class="line">&#123;</span><br><span class="line">    sumou += ++i;</span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine(&quot;基数和是&#123;0&#125;，偶数和是&#123;1&#125;&quot;, sumji, sumou);</span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure><h1 id="for语句嵌套"><a href="#for语句嵌套" class="headerlink" title="for语句嵌套"></a>for语句嵌套</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">int sum = 1;</span><br><span class="line">for (int i = 1; i &lt;= 10; i++)</span><br><span class="line">&#123;</span><br><span class="line">    for (int j = 1; j &lt;=10; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(&quot;XXXXX&#123;0&#125;&quot;,sum);</span><br><span class="line">        sum++;</span><br><span class="line">    &#125;              </span><br><span class="line">&#125;</span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure><p>九九表  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">for (int i = 1; i &lt; 10; i++)</span><br><span class="line">&#123;</span><br><span class="line">    for (int j = 1; j &lt;= i; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.Write(&quot;&#123;0&#125;x&#123;1&#125;=&#123;2&#125;\t&quot;, i, j, i * j);</span><br><span class="line">    &#125;</span><br><span class="line">    Console.WriteLine(&quot;&quot;);</span><br><span class="line">&#125;</span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure><h1 id="break，continue"><a href="#break，continue" class="headerlink" title="break，continue"></a>break，continue</h1><p>1.break<br>结束循环<br>2.continue<br>结束本次循环  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">int sum = 0;</span><br><span class="line">int i = 1;</span><br><span class="line">while (i &lt;= 100)</span><br><span class="line">&#123;</span><br><span class="line">    if (i % 7 == 0)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        continue;</span><br><span class="line">    &#125;</span><br><span class="line">    sum += i;</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine(sum);</span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C#基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> while </tag>
            
            <tag> for </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#基础记录(3)</title>
      <link href="/2020/02/17/c%E6%B2%99%E5%9D%A13/"/>
      <url>/2020/02/17/c%E6%B2%99%E5%9D%A13/</url>
      
        <content type="html"><![CDATA[<h1 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h1><p>＞ ＜ ＞= ＜= == !=<br>由关系运算符连接的表达式为关系表达式<br>关系表达式结果只有对错所以结果用bool类型<br>bool a = 100 ＞ 50<br>console.WritLine（a）;</p><h1 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h1><ol><li><p>&amp;&amp;逻辑与<br>bool b = 140 ＜ 200&amp;&true;<br>（或140＜200&amp;&amp;7＞1）<br>console.WritLine(b);  </p></li><li><p>||逻辑或<br>同理  </p></li><li><p>！逻辑非<br>bool c = !(5＞3);<br>console.writeline(c);  </p><h1 id="if-else"><a href="#if-else" class="headerlink" title="if-else"></a>if-else</h1></li><li><p>if语句<br>①语法<br>if(判断条件)<br>{<br>代码<br>}<br>判断条件一般为关系表达式或bool类型的值<br>true执行，false跳过  </p></li><li><p>if-else语句<br>语法<br>if(判断条件)<br>{<br>代码<br>} else {<br>代码<br>}  </p></li><li><p>if-else-if语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">int a = Convert.ToInt32(Console.ReadLine());</span><br><span class="line">if (a &gt; 200)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(&quot;200 +&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    if (a &gt; 150 &amp;&amp; a &lt;= 200) //&amp;&amp;a《200可省略</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(&quot;150~200&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        if (a &gt; 100 &amp;&amp; a &lt;= 150)//同理</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(&quot;100~150&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            if (a &lt;= 100)//同理</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(&quot;100以下&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure></li></ol><h1 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">string a = Console.ReadLine();</span><br><span class="line">switch (a)</span><br><span class="line">&#123;</span><br><span class="line">    case &quot;小明&quot;: Console.WriteLine(&quot;XX&quot;);</span><br><span class="line">        break;</span><br><span class="line">    case &quot;小红&quot;:Console.WriteLine(&quot;XXX&quot;);</span><br><span class="line">        break;</span><br><span class="line">    case &quot;小李&quot;:Console.WriteLine(&quot;XXXX&quot;);</span><br><span class="line">        break;</span><br><span class="line">    default:Console.WriteLine(&quot;XXXXXXXXX&quot;);</span><br><span class="line">        break;</span><br><span class="line">&#125;</span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C#基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 占位符 </tag>
            
            <tag> 关系运算符 </tag>
            
            <tag> 逻辑运算符 </tag>
            
            <tag> if-else </tag>
            
            <tag> switch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#基础记录(2)</title>
      <link href="/2020/02/16/c%E6%B2%99%E5%9D%A12/"/>
      <url>/2020/02/16/c%E6%B2%99%E5%9D%A12/</url>
      
        <content type="html"><![CDATA[<p>axure</p><h1 id="加加与减减"><a href="#加加与减减" class="headerlink" title="加加与减减"></a>加加与减减</h1><p>1.++<br>(1)前++和后++<br>单独使用，前++与后++都为自身+1<br>前++，自身+1，后参与运算。<br>int a = 10;<br>int b = 5 + ++a;<br>a为11，b为16<br>后++，原值先参与运算，后自身+1。<br>int a = 10;<br>int b = 5 + a++;<br>a为11，b为15<br>+=<br>int a = 10;<br>int a += 20；<br>a为30，a+20=a<br>int a = 10;<br>int b = a++ + ++a * 3 + –a + a++;<br>10+12*3+11+11</p><h1 id="一元运算符"><a href="#一元运算符" class="headerlink" title="一元运算符"></a>一元运算符</h1><p>++ –<br>只需要一个操作数完成的运算。  </p><h1 id="二元运算符"><a href="#二元运算符" class="headerlink" title="二元运算符"></a>二元运算符</h1><p>例+ - * / %<br>+连接字符串或字符串与数字<br>需要两个或以上才能完成的操作符。  </p><h1 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h1><p>1.一元运算符优先级高于二元运算符。<br>2.表达式中一、二元运算符共存，首先计算一元运算符。  </p><h1 id="接受用户输入"><a href="#接受用户输入" class="headerlink" title="接受用户输入"></a>接受用户输入</h1><p>console.readline();<br>例Console.WriteLine(“请输入分类：”)；<br>string tags = Console.ReadLine();<br>console.writline(“你的分类为{0}”，name)；<br>console.readkey();<br>输入整数转换数字<br>string str = Console.ReadLine();<br>int num = Convert.ToInt32(str):<br>Console.WriteLine(num);<br>输入小数转换数字<br>string str = Console.ReadLine();<br>double num = Convert.ToDouble(str):<br>Console.WriteLine(num);   </p><h1 id="常用转义符"><a href="#常用转义符" class="headerlink" title="常用转义符"></a>常用转义符</h1><p>\n:换行<br>&quot;:英文半角双引号<br>（”12345&quot;6&quot;7”）<br>\:一个<br>\t:一个tab空格<br>\b:一个Backpace（头尾无用）<br>@:在字符串前<br>①取消“\”在字符串中的转义作用，使其单纯表示斜杠（””除外）<br>（@”C\a\b\c\d\e\f”)<br>②将字符串按原格式输出<br>（@“aabbccddeff<br>gghh“）  </p><h1 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h1><p>1.隐式类型转换（自动类型转换）<br>①两种类型兼容<br>例int和double兼容<br>②原类型小于目标类型<br>小转大例如int–double,int–float<br>2.显式类型转换（强制类型转换）<br>①两种类型兼容<br>②原类型大于目标类型<br>double-int,double-float<br>例double a = 3.14;<br>int b = (int)a;<br>3.表达式中类型转换<br>两个int类型加减乘除取余后仍为整数类型。<br>如果一个操作数为double类型，则整个表达式可提升为double类型。  </p>]]></content>
      
      
      <categories>
          
          <category> C#基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 类型转换 </tag>
            
            <tag> 转义符 </tag>
            
            <tag> 一二元运算符 </tag>
            
            <tag> 用户输入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#基础记录(1)</title>
      <link href="/2020/02/15/c%E6%B2%99%E5%9D%A11/"/>
      <url>/2020/02/15/c%E6%B2%99%E5%9D%A11/</url>
      
        <content type="html"><![CDATA[<p>Console.WriteLine(“”); 内容输出至控制台<br>Console.ReadKey();     暂停当前程序，等待按任意键  </p><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><p>//&nbsp;&ensp;&ensp;&ensp;&nbsp;&nbsp;&ensp;&ensp;&ensp; 行注释<br>/* */    &ensp;&ensp;&ensp;&ensp;&ensp;  大段文本注释<br>///      &ensp;&nbsp;&ensp;&ensp;&ensp;&ensp;&ensp; 类、方法注释<br>ctrl+k+c &ensp;&nbsp;注释所选代码<br>ctrl+k+u    &ensp;&nbsp;取消注释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#region折叠（起）</span><br><span class="line">#endregion折叠（止）</span><br></pre></td></tr></table></figure><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>Properties:属性<br>App.config:配置文件<br>Program:类文件</p><p>变量</p><p>变量类型 变量名 = 值    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int number = 10;</span><br><span class="line">int speed;</span><br><span class="line">speed = 10;</span><br></pre></td></tr></table></figure><p>先声明，后赋值，再使用</p><h1 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h1><ol><li><strong>int</strong><br>范围-2147483648~2147483647</li><li><strong>float</strong><br>单精度小数<br>数值后需加f。<br>整数、小数，小数点后7位</li><li><strong>double</strong><br>双精度小数<br>小数点后15~16位</li><li><strong>string</strong><br>字符串类型<br>存储文本、空。<br>值需加双引号  </li><li><strong>char</strong><br>字符类型<br>存储单个字符，最多最少只能一个字符，不能存储空<br>值需加单引号  </li><li><strong>bool</strong><br>描述对错<br>值只有true和false<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1>（1）+&nbsp;-&nbsp;*&nbsp;/<br>10/3 = 3  取整<br>10%3 = 1  取余<br>（2）“=”和“+”<h1 id="占位符"><a href="#占位符" class="headerlink" title="占位符"></a>占位符</h1>{}<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int A =10  </span><br><span class="line">float B =20  </span><br><span class="line">double C = 30  </span><br><span class="line">Console.WriteLine(&quot;XXX&#123;0&#125;,DAV&#123;1&#125;,IFN&#123;2&#125;&quot;，A,B,C);</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> C#基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据类型 </tag>
            
            <tag> 运算符 </tag>
            
            <tag> 占位符 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第二</title>
      <link href="/2019/10/18/%E7%AC%AC%E4%BA%8C/"/>
      <url>/2019/10/18/%E7%AC%AC%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<p>啊啊啊啊啊啊</p>]]></content>
      
      
      <categories>
          
          <category> 分类一 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ballball啦 </tag>
            
            <tag> 标签一 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="/2019/10/16/%E6%B5%8B%E8%AF%95%E5%88%86%E7%B1%BB/"/>
      <url>/2019/10/16/%E6%B5%8B%E8%AF%95%E5%88%86%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h1><p>#2.引用<br> 前加&gt;</p><blockquote><p>—–鲁迅</p></blockquote><h1 id="3-列表"><a href="#3-列表" class="headerlink" title="3.列表"></a>3.列表</h1><ol><li>第一</li><li>第二</li><li>第三</li></ol><h1 id="4-斜体"><a href="#4-斜体" class="headerlink" title="4.斜体"></a>4.斜体</h1><p>前后各一个*</p><p><em>斜体</em></p><h1 id="5-加粗"><a href="#5-加粗" class="headerlink" title="5.加粗"></a>5.加粗</h1><p>前后各两个**</p><p><strong>加粗</strong></p><h1 id="6-代码"><a href="#6-代码" class="headerlink" title="6.代码"></a>6.代码</h1><p>前后三个`</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list_1 = set(list_1)</span><br><span class="line">list_2 = set([2, 6, 0, 66, 22, 8, 4])</span><br></pre></td></tr></table></figure><h1 id="7-网页"><a href="#7-网页" class="headerlink" title="7.网页"></a>7.网页</h1><p>方括号加圆括号</p><p>方括号填名称，圆括号填网址</p><p><a href="https://www.baidu.com/" target="_blank" rel="noopener">百度官网</a></p><h1 id="8-分割线"><a href="#8-分割线" class="headerlink" title="8.分割线"></a>8.分割线</h1><p>三个星</p><hr><p><img src="https://img.vim-cn.com/a5/4981b1d483d7354faacc270ad1a30ca2b27621.jpg" alt><br>#9.换行#<br>末尾双空格<br>1234<br>5678<br>#10.空格#<br><code>&amp;nbsp;</code> &nbsp;不断行一个空格<br><code>&amp;ensp;</code>&ensp;两个空格<br><code>&amp;emsp;</code>&ensp;四个空格  </p>]]></content>
      
      
      <categories>
          
          <category> 分类一 </category>
          
          <category> 分类一下二 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 标签一 </tag>
            
            <tag> 标签二 </tag>
            
            <tag> 标签三 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/10/13/hello-world/"/>
      <url>/2019/10/13/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
